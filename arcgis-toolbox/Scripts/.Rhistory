library(missMDA)
?igraph
??igraph
library(igraph)
library(RColorBrewer)
library(dplyr)
library(sp)
library(missMDA)
edge.weights <- function(community, network, weight.within = 100, weight.between = 2)
{
bridges <- crossing(communities = community, graph = network)
weights <- ifelse(test = bridges, yes = weight.between, no = weight.within)
return(weights)
}
?graph_from_data_frame
library(igraph)
library(RColorBrewer)
library(dplyr)
library(sp)
edge.weights <- function(community, network, weight.within = 100, weight.between = 2)
{
bridges <- crossing(communities = community, graph = network)
weights <- ifelse(test = bridges, yes = weight.between, no = weight.within)
return(weights)
}
tool_exec <- function(in_params, out_params)
{
#Load library
if (!requireNamespace("igraph", quietly = TRUE))
install.packages("igraph")
if (!requireNamespace("RColorBrewer", quietly = TRUE))
install.packages("RColorBrewer")
if (!requireNamespace("dplyr", quietly = TRUE))
install.packages("dplyr")
if (!requireNamespace("sp", quietly = TRUE))
install.packages("sp")
require(igraph)
#require(missMDA)
require(dplyr)
require(sp)
require(RColorBrewer)
#Get input parameters
message("Reading Input Parameters...")
input_nodes_table <- in_params[[1]]
input_link_table <- in_params[[2]]
input_telecoupling_system <- in_params[[3]]
clustering_algorithm <- in_params[[4]]
#Set output parameters
out_pdf <- out_params[[1]]
out_telecoupling_system <- out_params[[2]]
# Input: nodes.csv for attributes of nodes; link.csv for attributes of edges
test.node <- read.csv(file=input_nodes_table, header=T, stringsAsFactors=FALSE, check.names=FALSE)
test.link <- read.csv(file=input_link_table, header=T, stringsAsFactors=FALSE, check.names=FALSE)
##USE THESE TWO LINES ONLY WHEN YOU RUN THE SCRIPT IN ARCGIS
test.link <- read.csv(file=input_link_table, header=T, stringsAsFactors=FALSE, check.names=FALSE)
test.link
view(test.link)
library(igraph)
library(RColorBrewer)
library(dplyr)
library(sp)
edge.weights <- function(community, network, weight.within = 100, weight.between = 2)
{
bridges <- crossing(communities = community, graph = network)
weights <- ifelse(test = bridges, yes = weight.between, no = weight.within)
return(weights)
}
setwd("C:/Users/Laptop/Downloads/Network analysis sample data/data/data")
edge.weights <- function(community, network, weight.within = 100, weight.between = 2)
{
bridges <- crossing(communities = community, graph = network)
weights <- ifelse(test = bridges, yes = weight.between, no = weight.within)
return(weights)
}
